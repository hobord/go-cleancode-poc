syntax = "proto3";

package github.com.hobord.go_cleancode_poc.user_grpc;
option go_package = "user_grpc";

service UserGRPC {
    rpc GetByID(UserIdMessage) returns (User) {}
    rpc List(ListOptions) returns (UsersResponse) {}
    rpc Create(User) returns (User) {}
    rpc Update(User) returns (UsersResponse) {}
    rpc Delete(UserIdMessage) returns (DeleteResponse) {}
}

message Timestamp {
  // Represents seconds of UTC time since Unix epoch
  // 1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to
  // 9999-12-31T23:59:59Z inclusive.
  int64 seconds = 1;

  // Non-negative fractions of a second at nanosecond resolution. Negative
  // second values with fractions must still have non-negative nanos values
  // that count forward in time. Must be from 0 to 999,999,999
  // inclusive.
  int32 nanos = 2;
}

message UserIdMessage {
  string id = 1;
}
message PaginationOption {
    int32 limit = 1;
    int32 offset = 2;
}
message OrderOption {
    string column = 1;
    bool desc = 2;
}
message ListOptions {
    PaginationOption pagination = 1;
    repeated OrderOption order = 2;
}

message User {
    string id = 1;
    string email = 2;
    string name = 3;
    Timestamp updatedAt = 4;
    Timestamp createdAt = 5;
}

message UsersResponse {
    repeated User user = 1;
}

message DeleteResponse {
    bool success = 1;
}