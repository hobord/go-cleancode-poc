// Code generated by protoc-gen-go. DO NOT EDIT.
// source: user.proto

package user_grpc

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Timestamp struct {
	// Represents seconds of UTC time since Unix epoch
	// 1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to
	// 9999-12-31T23:59:59Z inclusive.
	Seconds int64 `protobuf:"varint,1,opt,name=seconds,proto3" json:"seconds,omitempty"`
	// Non-negative fractions of a second at nanosecond resolution. Negative
	// second values with fractions must still have non-negative nanos values
	// that count forward in time. Must be from 0 to 999,999,999
	// inclusive.
	Nanos                int32    `protobuf:"varint,2,opt,name=nanos,proto3" json:"nanos,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Timestamp) Reset()         { *m = Timestamp{} }
func (m *Timestamp) String() string { return proto.CompactTextString(m) }
func (*Timestamp) ProtoMessage()    {}
func (*Timestamp) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{0}
}

func (m *Timestamp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Timestamp.Unmarshal(m, b)
}
func (m *Timestamp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Timestamp.Marshal(b, m, deterministic)
}
func (m *Timestamp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Timestamp.Merge(m, src)
}
func (m *Timestamp) XXX_Size() int {
	return xxx_messageInfo_Timestamp.Size(m)
}
func (m *Timestamp) XXX_DiscardUnknown() {
	xxx_messageInfo_Timestamp.DiscardUnknown(m)
}

var xxx_messageInfo_Timestamp proto.InternalMessageInfo

func (m *Timestamp) GetSeconds() int64 {
	if m != nil {
		return m.Seconds
	}
	return 0
}

func (m *Timestamp) GetNanos() int32 {
	if m != nil {
		return m.Nanos
	}
	return 0
}

type UserIdMessage struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserIdMessage) Reset()         { *m = UserIdMessage{} }
func (m *UserIdMessage) String() string { return proto.CompactTextString(m) }
func (*UserIdMessage) ProtoMessage()    {}
func (*UserIdMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{1}
}

func (m *UserIdMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserIdMessage.Unmarshal(m, b)
}
func (m *UserIdMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserIdMessage.Marshal(b, m, deterministic)
}
func (m *UserIdMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserIdMessage.Merge(m, src)
}
func (m *UserIdMessage) XXX_Size() int {
	return xxx_messageInfo_UserIdMessage.Size(m)
}
func (m *UserIdMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_UserIdMessage.DiscardUnknown(m)
}

var xxx_messageInfo_UserIdMessage proto.InternalMessageInfo

func (m *UserIdMessage) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type PaginationOption struct {
	Limit                int32    `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset               int32    `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PaginationOption) Reset()         { *m = PaginationOption{} }
func (m *PaginationOption) String() string { return proto.CompactTextString(m) }
func (*PaginationOption) ProtoMessage()    {}
func (*PaginationOption) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{2}
}

func (m *PaginationOption) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PaginationOption.Unmarshal(m, b)
}
func (m *PaginationOption) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PaginationOption.Marshal(b, m, deterministic)
}
func (m *PaginationOption) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PaginationOption.Merge(m, src)
}
func (m *PaginationOption) XXX_Size() int {
	return xxx_messageInfo_PaginationOption.Size(m)
}
func (m *PaginationOption) XXX_DiscardUnknown() {
	xxx_messageInfo_PaginationOption.DiscardUnknown(m)
}

var xxx_messageInfo_PaginationOption proto.InternalMessageInfo

func (m *PaginationOption) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *PaginationOption) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

type OrderOption struct {
	Column               string   `protobuf:"bytes,1,opt,name=column,proto3" json:"column,omitempty"`
	Desc                 bool     `protobuf:"varint,2,opt,name=desc,proto3" json:"desc,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OrderOption) Reset()         { *m = OrderOption{} }
func (m *OrderOption) String() string { return proto.CompactTextString(m) }
func (*OrderOption) ProtoMessage()    {}
func (*OrderOption) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{3}
}

func (m *OrderOption) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderOption.Unmarshal(m, b)
}
func (m *OrderOption) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderOption.Marshal(b, m, deterministic)
}
func (m *OrderOption) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderOption.Merge(m, src)
}
func (m *OrderOption) XXX_Size() int {
	return xxx_messageInfo_OrderOption.Size(m)
}
func (m *OrderOption) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderOption.DiscardUnknown(m)
}

var xxx_messageInfo_OrderOption proto.InternalMessageInfo

func (m *OrderOption) GetColumn() string {
	if m != nil {
		return m.Column
	}
	return ""
}

func (m *OrderOption) GetDesc() bool {
	if m != nil {
		return m.Desc
	}
	return false
}

type ListOptions struct {
	Pagination           *PaginationOption `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty"`
	Order                []*OrderOption    `protobuf:"bytes,2,rep,name=order,proto3" json:"order,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ListOptions) Reset()         { *m = ListOptions{} }
func (m *ListOptions) String() string { return proto.CompactTextString(m) }
func (*ListOptions) ProtoMessage()    {}
func (*ListOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{4}
}

func (m *ListOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListOptions.Unmarshal(m, b)
}
func (m *ListOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListOptions.Marshal(b, m, deterministic)
}
func (m *ListOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListOptions.Merge(m, src)
}
func (m *ListOptions) XXX_Size() int {
	return xxx_messageInfo_ListOptions.Size(m)
}
func (m *ListOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_ListOptions.DiscardUnknown(m)
}

var xxx_messageInfo_ListOptions proto.InternalMessageInfo

func (m *ListOptions) GetPagination() *PaginationOption {
	if m != nil {
		return m.Pagination
	}
	return nil
}

func (m *ListOptions) GetOrder() []*OrderOption {
	if m != nil {
		return m.Order
	}
	return nil
}

type User struct {
	Id                   string     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Email                string     `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	Name                 string     `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	UpdatedAt            *Timestamp `protobuf:"bytes,4,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	CreatedAt            *Timestamp `protobuf:"bytes,5,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{5}
}

func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (m *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(m, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *User) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *User) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *User) GetUpdatedAt() *Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

func (m *User) GetCreatedAt() *Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

type UsersResponse struct {
	User                 []*User  `protobuf:"bytes,1,rep,name=user,proto3" json:"user,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UsersResponse) Reset()         { *m = UsersResponse{} }
func (m *UsersResponse) String() string { return proto.CompactTextString(m) }
func (*UsersResponse) ProtoMessage()    {}
func (*UsersResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{6}
}

func (m *UsersResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UsersResponse.Unmarshal(m, b)
}
func (m *UsersResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UsersResponse.Marshal(b, m, deterministic)
}
func (m *UsersResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UsersResponse.Merge(m, src)
}
func (m *UsersResponse) XXX_Size() int {
	return xxx_messageInfo_UsersResponse.Size(m)
}
func (m *UsersResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UsersResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UsersResponse proto.InternalMessageInfo

func (m *UsersResponse) GetUser() []*User {
	if m != nil {
		return m.User
	}
	return nil
}

type DeleteResponse struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteResponse) Reset()         { *m = DeleteResponse{} }
func (m *DeleteResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteResponse) ProtoMessage()    {}
func (*DeleteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{7}
}

func (m *DeleteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteResponse.Unmarshal(m, b)
}
func (m *DeleteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteResponse.Marshal(b, m, deterministic)
}
func (m *DeleteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteResponse.Merge(m, src)
}
func (m *DeleteResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteResponse.Size(m)
}
func (m *DeleteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteResponse proto.InternalMessageInfo

func (m *DeleteResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func init() {
	proto.RegisterType((*Timestamp)(nil), "github.com.hobord.go_cleancode_poc.user_grpc.Timestamp")
	proto.RegisterType((*UserIdMessage)(nil), "github.com.hobord.go_cleancode_poc.user_grpc.UserIdMessage")
	proto.RegisterType((*PaginationOption)(nil), "github.com.hobord.go_cleancode_poc.user_grpc.PaginationOption")
	proto.RegisterType((*OrderOption)(nil), "github.com.hobord.go_cleancode_poc.user_grpc.OrderOption")
	proto.RegisterType((*ListOptions)(nil), "github.com.hobord.go_cleancode_poc.user_grpc.ListOptions")
	proto.RegisterType((*User)(nil), "github.com.hobord.go_cleancode_poc.user_grpc.User")
	proto.RegisterType((*UsersResponse)(nil), "github.com.hobord.go_cleancode_poc.user_grpc.UsersResponse")
	proto.RegisterType((*DeleteResponse)(nil), "github.com.hobord.go_cleancode_poc.user_grpc.DeleteResponse")
}

func init() { proto.RegisterFile("user.proto", fileDescriptor_116e343673f7ffaf) }

var fileDescriptor_116e343673f7ffaf = []byte{
	// 502 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x54, 0x41, 0x8b, 0xd3, 0x40,
	0x18, 0xdd, 0xb4, 0x4d, 0xb6, 0xfd, 0x82, 0x8b, 0x0c, 0xb2, 0x84, 0xbd, 0x58, 0xe6, 0x54, 0x44,
	0x72, 0xa8, 0x07, 0x59, 0x56, 0x44, 0x77, 0x17, 0x97, 0x05, 0xa5, 0xcb, 0x60, 0x11, 0x3c, 0x58,
	0xd2, 0x99, 0x6f, 0xb3, 0x03, 0x49, 0x26, 0x64, 0x26, 0x07, 0xd1, 0x83, 0x07, 0xfd, 0x5b, 0xfe,
	0x24, 0x7f, 0x83, 0xcc, 0x24, 0x1b, 0xeb, 0xde, 0x92, 0x5e, 0x4a, 0x5e, 0x3b, 0xef, 0x7d, 0xdf,
	0x7b, 0xf3, 0x1a, 0x80, 0x5a, 0x63, 0x15, 0x97, 0x95, 0x32, 0x8a, 0x3c, 0x4f, 0xa5, 0xb9, 0xab,
	0xb7, 0x31, 0x57, 0x79, 0x7c, 0xa7, 0xb6, 0xaa, 0x12, 0x71, 0xaa, 0x36, 0x3c, 0xc3, 0xa4, 0xe0,
	0x4a, 0xe0, 0xa6, 0x54, 0x3c, 0xb6, 0xc7, 0x37, 0x69, 0x55, 0x72, 0x7a, 0x06, 0xb3, 0x8f, 0x32,
	0x47, 0x6d, 0x92, 0xbc, 0x24, 0x11, 0x1c, 0x6a, 0xe4, 0xaa, 0x10, 0x3a, 0xf2, 0xe6, 0xde, 0x62,
	0xcc, 0xee, 0x21, 0x79, 0x02, 0x7e, 0x91, 0x14, 0x4a, 0x47, 0xa3, 0xb9, 0xb7, 0xf0, 0x59, 0x03,
	0xe8, 0x53, 0x78, 0xb4, 0xd6, 0x58, 0x5d, 0x8b, 0x0f, 0xa8, 0x75, 0x92, 0x22, 0x39, 0x82, 0x91,
	0x14, 0x8e, 0x3b, 0x63, 0x23, 0x29, 0xe8, 0x1b, 0x78, 0x7c, 0x93, 0xa4, 0xb2, 0x48, 0x8c, 0x54,
	0xc5, 0xaa, 0xb4, 0x9f, 0x56, 0x2a, 0x93, 0xb9, 0x34, 0xee, 0x98, 0xcf, 0x1a, 0x40, 0x8e, 0x21,
	0x50, 0xb7, 0xb7, 0x1a, 0x4d, 0x3b, 0xa1, 0x45, 0xf4, 0x14, 0xc2, 0x55, 0x25, 0xb0, 0x6a, 0xc9,
	0xc7, 0x10, 0x70, 0x95, 0xd5, 0x79, 0xd1, 0x0e, 0x69, 0x11, 0x21, 0x30, 0x11, 0xa8, 0xb9, 0x23,
	0x4f, 0x99, 0x7b, 0xa6, 0xbf, 0x3d, 0x08, 0xdf, 0x4b, 0x6d, 0x1a, 0xaa, 0x26, 0x5f, 0x00, 0xca,
	0x6e, 0x19, 0xc7, 0x0f, 0x97, 0xaf, 0xe3, 0x3e, 0x69, 0xc5, 0x0f, 0xcd, 0xb0, 0x1d, 0x45, 0xb2,
	0x02, 0x5f, 0xd9, 0x55, 0xa3, 0xd1, 0x7c, 0xbc, 0x08, 0x97, 0xa7, 0xfd, 0xa4, 0x77, 0x5c, 0xb2,
	0x46, 0x87, 0xfe, 0xf1, 0x60, 0x62, 0xf3, 0x7d, 0x18, 0xab, 0x8d, 0x10, 0xf3, 0x44, 0x66, 0xce,
	0xee, 0x8c, 0x35, 0xc0, 0x66, 0x50, 0x24, 0x39, 0x46, 0x63, 0xf7, 0xa5, 0x7b, 0x26, 0x6b, 0x98,
	0xd5, 0xa5, 0x48, 0x0c, 0x8a, 0xb7, 0x26, 0x9a, 0x38, 0xcb, 0x2f, 0xfb, 0xed, 0xd5, 0xb5, 0x83,
	0xfd, 0x53, 0xb2, 0xb2, 0xbc, 0xc2, 0x56, 0xd6, 0xdf, 0x53, 0xb6, 0x53, 0xa2, 0x9f, 0x9a, 0x3e,
	0x69, 0x86, 0xba, 0x54, 0x85, 0x46, 0xf2, 0x0e, 0x26, 0x96, 0x12, 0x79, 0x2e, 0xd1, 0x65, 0xbf,
	0x11, 0x56, 0x8a, 0x39, 0x3e, 0x7d, 0x06, 0x47, 0x97, 0x98, 0xa1, 0xc1, 0x4e, 0xd9, 0x56, 0xbd,
	0xe6, 0x1c, 0x75, 0x53, 0xf5, 0x29, 0xbb, 0x87, 0xcb, 0x9f, 0x3e, 0x4c, 0x2d, 0xf5, 0x8a, 0xdd,
	0x5c, 0x90, 0xef, 0x70, 0x78, 0x85, 0xe6, 0xfc, 0xeb, 0xf5, 0x25, 0x39, 0xeb, 0x3f, 0xbd, 0xfb,
	0x63, 0x9c, 0x0c, 0x58, 0x9d, 0x1e, 0x90, 0x1f, 0x1e, 0x4c, 0x6c, 0x83, 0x49, 0xcf, 0x2e, 0xed,
	0xb4, 0xfe, 0x64, 0xc0, 0xda, 0x5d, 0xfe, 0xf4, 0x80, 0x54, 0x10, 0x5c, 0xb8, 0xfb, 0x21, 0x03,
	0x2c, 0x0c, 0xb4, 0xfd, 0x0d, 0x82, 0xb5, 0xab, 0xda, 0xa0, 0x99, 0x7b, 0x1a, 0xfe, 0xe5, 0x41,
	0xd0, 0x74, 0x65, 0xbf, 0x1b, 0x7f, 0xd5, 0x8f, 0xfc, 0x7f, 0x3d, 0xe9, 0xc1, 0x79, 0xf8, 0x79,
	0xd6, 0xfd, 0xba, 0x0d, 0xdc, 0xab, 0xfd, 0xc5, 0xdf, 0x00, 0x00, 0x00, 0xff, 0xff, 0xb4, 0xb0,
	0x36, 0x53, 0xe8, 0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// UserGRPCClient is the client API for UserGRPC service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserGRPCClient interface {
	GetByID(ctx context.Context, in *UserIdMessage, opts ...grpc.CallOption) (*User, error)
	List(ctx context.Context, in *ListOptions, opts ...grpc.CallOption) (*UsersResponse, error)
	Create(ctx context.Context, in *User, opts ...grpc.CallOption) (*User, error)
	Update(ctx context.Context, in *User, opts ...grpc.CallOption) (*UsersResponse, error)
	Delete(ctx context.Context, in *UserIdMessage, opts ...grpc.CallOption) (*DeleteResponse, error)
}

type userGRPCClient struct {
	cc *grpc.ClientConn
}

func NewUserGRPCClient(cc *grpc.ClientConn) UserGRPCClient {
	return &userGRPCClient{cc}
}

func (c *userGRPCClient) GetByID(ctx context.Context, in *UserIdMessage, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/github.com.hobord.go_cleancode_poc.user_grpc.UserGRPC/GetByID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userGRPCClient) List(ctx context.Context, in *ListOptions, opts ...grpc.CallOption) (*UsersResponse, error) {
	out := new(UsersResponse)
	err := c.cc.Invoke(ctx, "/github.com.hobord.go_cleancode_poc.user_grpc.UserGRPC/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userGRPCClient) Create(ctx context.Context, in *User, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/github.com.hobord.go_cleancode_poc.user_grpc.UserGRPC/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userGRPCClient) Update(ctx context.Context, in *User, opts ...grpc.CallOption) (*UsersResponse, error) {
	out := new(UsersResponse)
	err := c.cc.Invoke(ctx, "/github.com.hobord.go_cleancode_poc.user_grpc.UserGRPC/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userGRPCClient) Delete(ctx context.Context, in *UserIdMessage, opts ...grpc.CallOption) (*DeleteResponse, error) {
	out := new(DeleteResponse)
	err := c.cc.Invoke(ctx, "/github.com.hobord.go_cleancode_poc.user_grpc.UserGRPC/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserGRPCServer is the server API for UserGRPC service.
type UserGRPCServer interface {
	GetByID(context.Context, *UserIdMessage) (*User, error)
	List(context.Context, *ListOptions) (*UsersResponse, error)
	Create(context.Context, *User) (*User, error)
	Update(context.Context, *User) (*UsersResponse, error)
	Delete(context.Context, *UserIdMessage) (*DeleteResponse, error)
}

// UnimplementedUserGRPCServer can be embedded to have forward compatible implementations.
type UnimplementedUserGRPCServer struct {
}

func (*UnimplementedUserGRPCServer) GetByID(ctx context.Context, req *UserIdMessage) (*User, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetByID not implemented")
}
func (*UnimplementedUserGRPCServer) List(ctx context.Context, req *ListOptions) (*UsersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method List not implemented")
}
func (*UnimplementedUserGRPCServer) Create(ctx context.Context, req *User) (*User, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedUserGRPCServer) Update(ctx context.Context, req *User) (*UsersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (*UnimplementedUserGRPCServer) Delete(ctx context.Context, req *UserIdMessage) (*DeleteResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}

func RegisterUserGRPCServer(s *grpc.Server, srv UserGRPCServer) {
	s.RegisterService(&_UserGRPC_serviceDesc, srv)
}

func _UserGRPC_GetByID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserIdMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserGRPCServer).GetByID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.hobord.go_cleancode_poc.user_grpc.UserGRPC/GetByID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserGRPCServer).GetByID(ctx, req.(*UserIdMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserGRPC_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListOptions)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserGRPCServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.hobord.go_cleancode_poc.user_grpc.UserGRPC/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserGRPCServer).List(ctx, req.(*ListOptions))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserGRPC_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(User)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserGRPCServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.hobord.go_cleancode_poc.user_grpc.UserGRPC/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserGRPCServer).Create(ctx, req.(*User))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserGRPC_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(User)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserGRPCServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.hobord.go_cleancode_poc.user_grpc.UserGRPC/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserGRPCServer).Update(ctx, req.(*User))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserGRPC_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserIdMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserGRPCServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.hobord.go_cleancode_poc.user_grpc.UserGRPC/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserGRPCServer).Delete(ctx, req.(*UserIdMessage))
	}
	return interceptor(ctx, in, info, handler)
}

var _UserGRPC_serviceDesc = grpc.ServiceDesc{
	ServiceName: "github.com.hobord.go_cleancode_poc.user_grpc.UserGRPC",
	HandlerType: (*UserGRPCServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetByID",
			Handler:    _UserGRPC_GetByID_Handler,
		},
		{
			MethodName: "List",
			Handler:    _UserGRPC_List_Handler,
		},
		{
			MethodName: "Create",
			Handler:    _UserGRPC_Create_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _UserGRPC_Update_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _UserGRPC_Delete_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "user.proto",
}
